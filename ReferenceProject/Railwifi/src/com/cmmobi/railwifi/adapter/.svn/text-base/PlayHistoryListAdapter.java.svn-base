package com.cmmobi.railwifi.adapter;

import java.util.ArrayList;
import java.util.List;

import android.content.Context;
import android.content.Intent;
import android.util.DisplayMetrics;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.cmmobi.railwifi.R;
import com.cmmobi.railwifi.activity.MovieDetailActivity;
import com.cmmobi.railwifi.dao.PlayHistory;
import com.cmmobi.railwifi.network.GsonResponseObject;
import com.cmmobi.railwifi.utils.ConStant;
import com.nostra13.universalimageloader.api.AnimateFirstDisplayListener;
import com.nostra13.universalimageloader.api.MyImageLoader;
import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer;
import com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer;
import com.nostra13.universalimageloader.core.listener.ImageLoadingListener;

public class PlayHistoryListAdapter extends BaseAdapter {

	private Context context;
	private LayoutInflater inflater;
	private List<PlayHistory> list = new ArrayList<PlayHistory>();
	private int size = 0;
	
	//使用开源的webimageloader
	public static DisplayImageOptions options;
	protected MyImageLoader imageLoader;
	private ImageLoadingListener animateFirstListener;
	
	public PlayHistoryListAdapter(final Context context) {
		this.context = context;
		DisplayMetrics dm = context.getApplicationContext().getResources().getDisplayMetrics();
		this.size = dm.widthPixels/5;
		inflater = LayoutInflater.from(context);
		
		animateFirstListener = new AnimateFirstDisplayListener();
		imageLoader = MyImageLoader.getInstance();
		
		options = new DisplayImageOptions.Builder()
		.cacheOnDisk(true)
		.showImageOnFail(R.drawable.pic_list_default)
		.cacheInMemory(true)
		.displayer(new SimpleBitmapDisplayer())
//		.displayer(new RoundedBitmapDisplayer(10))// 圆角图片
		.build();
	}

	@Override
	public int getCount() {
		// TODO Auto-generated method stub
		return list.size();
	}

	@Override
	public PlayHistory getItem(int position) {
		// TODO Auto-generated method stub
		return list.get(position);
	}

	@Override
	public long getItemId(int position) {
		// TODO Auto-generated method stub
		return position;
	}
	
	@Override
	public View getView(final int position, View convertView, ViewGroup parent) {
		ViewHolder holder = null;
		if (convertView == null) {
			convertView = inflater.inflate(
					R.layout.list_play_history_item, null);
			holder = new ViewHolder();
			
			holder.rl_whole = (RelativeLayout) convertView.findViewById(R.id.rl_whole);
			holder.tv_title = (TextView) convertView.findViewById(R.id.tv_title);
			holder.movie_pic = (ImageView) convertView.findViewById(R.id.movie_pic);
			holder.jindu = (TextView) convertView.findViewById(R.id.tv_jindu);
			holder.btn_play = (ImageView) convertView.findViewById(R.id.btn_play);
			holder.btn_read = (TextView) convertView.findViewById(R.id.btn_read);
			convertView.setTag(holder);
		} else {
			holder = (ViewHolder) convertView.getTag();
		}
		
		if(list.get(position).getMedia_type()==GsonResponseObject.MEDIA_TYPE_EBOOK){
			holder.btn_play.setVisibility(View.GONE);
			holder.btn_read.setVisibility(View.VISIBLE);
		}else{
			holder.btn_play.setVisibility(View.VISIBLE);
			holder.btn_read.setVisibility(View.GONE);
		}
		holder.jindu.setText("观看至" + list.get(position).getLocation());
		holder.tv_title.setText(list.get(position).getName());

		imageLoader.displayImage(list.get(position).getImg_path(), holder.movie_pic, options, animateFirstListener);

		holder.movie_pic.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				Intent intent1 = new Intent(context, MovieDetailActivity.class);
				intent1.putExtra(ConStant.INTENT_MEDIA_ID, list.get(position).getMedia_id());
				context.startActivity(intent1);
			}
		});
		
		
		return convertView;
	}
	
	public void setData(List<PlayHistory> data){
		if(data != null && data.size()>0){
			this.list.clear();
			this.list.addAll(data);
		}else{
			this.list.clear();
		}
	}
	
	public boolean isEmpty()
	{
		return list.isEmpty();
	}
	
	
	
	public class ViewHolder {
		RelativeLayout rl_whole;
		TextView tv_title;
		ImageView movie_pic;
		TextView jindu;
		ImageView btn_play;
		TextView btn_read;
	}

	
}